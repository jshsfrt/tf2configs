// ----------------------------------------------------------------------
//
// Helpers
//	-- Alternate Scoreboard Call - +score - calls the scoreboard, enables net_graph, calls timeleft
//	-- Developer Mode Temporary Activation - developer_on - echos go to top left of the screen for limited time
//	-- Forward Spawn - press a button to respawn in a forward spawn
//	-- toggle_voicechat and toggle_textchat
//	-- State Hotkey - +statekey - Key for combining the high ping and join class modifier key
//	-- Quick Class Switcher - +joinclass - press statekey and a key from 1-9 to change class.
//	-- Server Hotkey Assignment - +serverstuff - changes the keys assigned to other stuff to server stuff when statekey is pressed
//  -- Wait Fix -- gives an alternate target for wait so it doesn't crash
//
// ======================================================================

// ----------------
// Scoreboard call
//  -- calls the scoreboard, enables net_graph, calls timeleft
// ================
alias "+score" "+showscores; timeleft; net_graph_1"
alias "-score" "-showscores; net_graph_selection"

// ----------------
// Ragdoll Toggles
//  -- sets up aliases to toggle ragdolls on and off
// ================
alias ragdolls_on "cl_ragdoll_collide 1; cl_ragdoll_fade_time 15; cl_ragdoll_physics_enable 1; cl_ragdoll_forcefade 0"
alias ragdolls_off "ragdoll_sleepaftertime 10; cl_ragdoll_collide 0; cl_ragdoll_physics_enable 1; cl_ragdoll_fade_time 0.0F; g_ragdoll_fadespeed 0.0f; g_ragdoll_important_maxcount 10; g_ragdoll_lvfadespeed 10; g_ragdoll_maxcount 10"

// -----------------------------
// Toggle In-Game Voice and Chat
//   -- enables and disables voice and chat
// =============================
// voicechat
alias toggle_voicechat
alias toggle_voicechat_on "alias voicechat_selection voicechat_on; voicechat_on; alias toggle_voicechat toggle_voicechat_off"
alias toggle_voicechat_off "alias voicechat_selection voicechat_off; voicechat_off; alias toggle_voicechat toggle_voicechat_on"
alias voicechat_selection
alias voicechat_on "voice_modenable 1; voice_scale 0.85; echo Voice Chat ON"
alias voicechat_off "voice_modenable 0; voice_scale 0; echo Voice Chat OFF"

// textchat
alias toggle_textchat ""
alias toggle_textchat_on "alias textchat_selection textchat_on; textchat_on; alias toggle_textchat toggle_textchat_off"
alias toggle_textchat_off "alias textchat_selection textchat_off; textchat_off; alias toggle_textchat toggle_textchat_on"
alias textchat_selection
alias textchat_on "hud_saytext_time 7; alias sound sound_textchat_on; play_sound; echo Text Chat ON"
alias textchat_off "hud_saytext_time 0; alias sound sound_textchat_off; play_sound;  echo Text Chat OFF"

// -------------
// State Hotkey
//   -- Key for combining the high ping and join class modifier key
// =============
alias "+statekey" "+joinclass; +serverstuff; +interpstuff"
alias "-statekey" "-joinclass; -serverstuff; +interpstuff"

// ---------------------
// Quick Class Switcher
//   -- press statekey and a key from 1-9 to change class.
// =====================
alias +joinclass "bind 1 scout; bind 2 soldier; bind 3 pyro; bind 4 demoman; bind 5 heavy; bind 6 engineer; bind 7 medic; bind 8 sniper; bind 9 spy"
alias -joinclass "bind 1 weapon1; bind 2 weapon2; bind 3 weapon3; bind 4 weapon4; bind 5 weapon5; bind 6 slot6; bind 7 slot7; bind 8 slot8; bind 9 slot9"

alias scout "join_class scout"
alias soldier "join_class soldier"
alias pyro "join_class pyro"
alias demoman "join_class demoman"
alias heavy "join_class heavyweapons"
alias engineer "join_class engineer"
alias medic "join_class medic"
alias sniper "join_class sniper"
alias spy "join_class spy"

// --------------------------
// Server hotkey assignment
//    -- +serverstuff - changes the keys assigned to other stuff to server stuff when statekey is pressed
// ==========================
alias +serverstuff "alias hotkey_toggle_textchat primary_push; alias hotkey_toggle_voicechat primary_stopwatch; alias hotkey_toggle_sound primary_ctf; alias hotkey_toggle_autoreload current_rcon; alias hotkey_toggle_weapon_hide timelimit_reset; alias hotkey_toggle_autoheal tournament_reset"
alias -serverstuff "alias hotkey_toggle_textchat toggle_textchat; alias hotkey_toggle_voicechat toggle_voicechat; alias hotkey_toggle_sound toggle_sound; alias hotkey_toggle_autoreload toggle_autoreload; alias hotkey_toggle_weapon_hide toggle_weapon_hide; alias hotkey_toggle_autoheal toggle_autoheal"

alias hotkey_toggle_textchat toggle_textchat
alias hotkey_toggle_voicechat toggle_voicechat
alias hotkey_toggle_sound toggle_sound
alias hotkey_toggle_autoreload toggle_autoreload
alias hotkey_toggle_weapon_hide toggle_weapon_hide
alias hotkey_toggle_autoheal toggle_autoheal

// ------------
// Cycle Spawn
//   -- press a button to respawn in a forward spawn
// ============
alias class_demoman "join_class demoman"
alias class_engineer "join_class engineer"
alias class_heavyweapons "join_class heavyweapons"
alias class_medic "join_class medic"
alias class_pyro "join_class pyro"
alias class_scout "join_class scout"
alias class_sniper "join_class sniper"
alias class_soldier "join_class soldier"
alias class_spy "join_class spy"
 
// this is the class we want to end up as after we cycle spawns
// its the class we are when we execute the cycle_spawn command
alias current_class ""

// when a class config is executed this is called
// we use this to ensure that we execute 2 class configs
// (the intermediate class and the final class)
alias cycle_on_class_changed ""

// begin repeated attempts to change class
// terminate when class changes successfully
alias cycle_final_class "alias cycle_on_class_changed cycle_terminate; alias cycle_do_loop cycle_loop; cycle_do_loop"

// the command which will repeat until we sucessfully change class
alias cycle_loop "current_class; wait 25; cycle_do_loop"

// stop repeating cycle_loop
// do nothing on_class_changed
alias cycle_terminate "alias cycle_do_loop; alias cycle_on_class_changed"

// change to a random class, loop until cycle_on_class_changed is executed
alias cycle_random_class "alias cycle_on_class_changed cycle_random_terminate; alias cycle_do_loop cycle_random_loop; cycle_do_loop"

// the command which will repeat until we sucessfully change class
alias cycle_random_loop "join_class random; wait 25; cycle_do_loop"

// stop repeating cycle_random_loop
alias cycle_random_terminate "alias cycle_do_loop; cycle_final_class"

// the command we execute to cycle spawns
alias cycle_spawn "wait; cycle_spawn_value"

// pointer for cycle_spawn's current value, breaks naming conventions so we can keep 'cycle_spawn' as the name
alias cycle_spawn_value cycle_spawn_on
// activate and deactivate cycle_spawn
alias cycle_spawn_on "update_current_class; cycle_random_class"
alias cycle_spawn_off "join_class random"

// enable/disable for sv_allow_wait_command 0 to prevent a crash
alias wait_toggle_cycle_spawn_on "alias cycle_spawn_value cycle_spawn_on"
alias wait_toggle_cycle_spawn_off "alias cycle_spawn_value cycle_spawn_off"

// ---------
// Wait Fix
//   -- gives an alternate target for wait so it doesn't crash
// =========
// when wait is disabled this is called
// calling it from an infinite loop still crashes,
// so it is called before any use of a wait loop
alias wait "wait_scripts_off"

// set individually in competitive.cfg, this is just a helper alias for testing
alias wait_scripts_on "wait_toggle_apistol_on; wait_toggle_cycle_spawn_on; alias play_wait_disabled play_wait_first_time"
alias wait_scripts_off "wait_toggle_apistol_off; wait_toggle_cycle_spawn_off; play_wait_disabled"

// reset in wait_enabled so the sound plays every time it's disabled
alias play_wait_disabled play_wait_first_time

// disables the sound after the first call, then plays it
alias play_wait_first_time "alias play_wait_disabled ; alias sound sound_wait_disabled; play_sound"